{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "SentinelWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Sentinel log analytics workspace to connect to"
            }
        },
        "LogicAppName": {
            "defaultValue": "logic-AutoCloseAppleiCloudPrivateRelayIncidents",
            "type": "String",
            "metadata": {
                "description": "Name of the logic app to create"
            }
        },
        "SentinelConnectionName": {
            "defaultValue": "connection-AutoCloseAppleiCloudPrivateRelayIncidents",
            "type": "string",
            "metadata": {
                "description": "Name of the API connection to create"
            }
        },
        "SentinelResourceGroupName": {
            "defaultValue": "[resourceGroup().name]",
            "type": "string",
            "metadata": {
                "description": "Name of the Sentinel resource group, if different from the resource group where the logic app is deployed"
            }
        }
    },
    "variables": {
        "MiRoleAssignmentId": "[guid(concat(resourceGroup().id, parameters('SentinelConnectionName')))]",
        "SentinelResponderRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '3e150937-b8fe-4cfb-8069-0eaf05ecd056')]",
        "SentinelConnectionApiId": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuresentinel')]",
        "SentinelConnectionId": "[concat(resourceGroup().id, '/providers/Microsoft.Web/connections/', parameters('SentinelConnectionName'))]",
        "ArmIncidentPrefix": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('SentinelResourceGroupName'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('SentinelWorkspaceName'), '/providers/Microsoft.SecurityInsights/Incidents/')]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('SentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('SentinelConnectionName')]",
                "api": {
                    "name": "azuresentinel",
                    "displayName": "Microsoft Sentinel",
                    "description": "Cloud-native SIEM with a built-in AI so you can focus on what matters most",
                    "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1645/1.0.1645.3345/azuresentinel/icon.png",
                    "brandColor": "#0072C6",
                    "id": "[variables('SentinelConnectionApiId')]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "customParameterValues": {},
                "alternativeParameterValues": {},
                "parameterValueType": "Alternative"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('SentinelConnectionName'))]"
            ],
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Close_incident_if_all_IP_addresses_where_part_of_Apples_IP_ranges": {
                            "actions": {
                                "Update_incident": {
                                    "inputs": {
                                        "body": {
                                            "classification": {
                                                "ClassificationAndReason": "BenignPositive - SuspiciousButExpected",
                                                "ClassificationReasonText": "All IP addresses in this incident belong to the Apple iCloud Private Relay network and the detection is expected but benign"
                                            },
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "status": "Closed"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "path": "/Incidents"
                                    },
                                    "runAfter": {},
                                    "type": "ApiConnection"
                                }
                            },
                            "else": {
                                "actions": {
                                    "Add_comment_to_incident_(V3)": {
                                        "inputs": {
                                            "body": {
                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                "message": "<p>At least one IP address in this incident was not recognized as beeing part of the Apple iCloud Private Relay network. Please investigate this according to the SOC playbook.</p>"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/Incidents/Comment"
                                        },
                                        "runAfter": {},
                                        "type": "ApiConnection"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('CloseIncident')",
                                            "@true"
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "For_each_IP_address": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Entities_-_Get_IPs": {
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/ip"
                            },
                            "runAfter": {
                                "Only_proceed_if_incident_name_starts_with_Anonymous_IP_address": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "For_each_IP_address": {
                            "actions": {
                                "Check_if_response_is_empty": {
                                    "actions": {
                                        "Set_variable": {
                                            "inputs": {
                                                "name": "CloseIncident",
                                                "value": "@false"
                                            },
                                            "runAfter": {},
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@length(body('Parse_JSON_from_response')?['tables'][0]?['rows'])",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "Compose": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Compose": {
                                    "inputs": "@length(body('Parse_JSON_from_response')?['tables'][0]?['rows'])",
                                    "runAfter": {
                                        "Parse_JSON_from_response": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose"
                                },
                                "Create_KQL_query_to_check_for_Apple_IPs": {
                                    "inputs": "let AppleiCloudPrivateRelayRanges = externaldata(IPRange: string, Country: string, LanguageCode: string, City: string, AddressFamily: string) [\n    @\"https://raw.githubusercontent.com/f-bader/AzSentinelQueries/master/ExternalData/iCloudPrivateRelayIPRanges.csv\"]\n    with(format=\"csv\", ignoreFirstRecord=true)\n    | summarize IPRange=make_set(IPRange) by AddressFamily;\nlet AppleiCloudPrivateRelayRangesIPv4 = toscalar(AppleiCloudPrivateRelayRanges\n    | where AddressFamily == \"InterNetwork\"\n    | project IPRange);\nlet AppleiCloudPrivateRelayRangesIPv6 = toscalar(AppleiCloudPrivateRelayRanges\n    | where AddressFamily == \"InterNetworkV6\"\n    | project IPRange);\nprint \"@{items('For_each_IP_address')?['Address']}\"\n| project-rename IPAddress = print_0\n| extend IsInAppleiCloudv4Range = ipv4_is_in_any_range(IPAddress, AppleiCloudPrivateRelayRangesIPv4)\n| extend IsInAppleiCloudv6Range = ipv6_is_in_any_range(IPAddress, AppleiCloudPrivateRelayRangesIPv6)\n| where  IsInAppleiCloudv4Range or IsInAppleiCloudv6Range\n",
                                    "runAfter": {},
                                    "type": "Compose"
                                },
                                "HTTP": {
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://api.loganalytics.io",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "GET",
                                        "queries": {
                                            "query": "@{outputs('Create_KQL_query_to_check_for_Apple_IPs')}"
                                        },
                                        "uri": "https://api.loganalytics.io/v1/workspaces/@{triggerBody()?['workspaceId']}/query"
                                    },
                                    "runAfter": {
                                        "Create_KQL_query_to_check_for_Apple_IPs": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http"
                                },
                                "Parse_JSON_from_response": {
                                    "inputs": {
                                        "content": "@body('HTTP')",
                                        "schema": {
                                            "properties": {
                                                "tables": {
                                                    "items": {
                                                        "properties": {
                                                            "columns": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "type"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "rows": {
                                                                "items": {
                                                                    "type": "array"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson"
                                }
                            },
                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                            "runAfter": {
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "CloseIncident",
                                        "type": "boolean",
                                        "value": "@true"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Only_proceed_if_incident_name_starts_with_Anonymous_IP_address": {
                            "actions": {},
                            "else": {
                                "actions": {
                                    "Terminate": {
                                        "inputs": {
                                            "runStatus": "Cancelled"
                                        },
                                        "runAfter": {},
                                        "type": "Terminate"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "startsWith": [
                                            "@triggerBody()?['object']?['properties']?['title']",
                                            "Anonymous IP address "
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            },
                            "type": "ApiConnectionWebhook"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[variables('SentinelConnectionId')]",
                                "connectionName": "[parameters('SentinelConnectionName')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[variables('SentinelConnectionApiId')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "nested-role-assignment",
            "resourceGroup": "[parameters('SentinelResourceGroupName')]",
            "subscriptionId": "[subscription().subscriptionId]",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('LogicAppName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[variables('MiRoleAssignmentId')]",
                            "properties": {
                                "roleDefinitionId": "[variables('SentinelResponderRoleDefinitionId')]",
                                "principalId": "[reference(resourceId(subscription().subscriptionId, resourceGroup().name,'Microsoft.Logic/workflows', parameters('LogicAppName')), '2019-05-01', 'full').identity.principalId]",
                                "principalType": "ServicePrincipal"
                            }
                        }
                    ]
                }
            }
        }
    ]
}